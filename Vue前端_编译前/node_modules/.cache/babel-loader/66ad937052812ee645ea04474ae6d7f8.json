{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { onMounted, reactive, ref, toRefs } from \"vue\";\nimport { getUserById, getUserByIdForUser, updateUser, updateUserForUser, uploadUserImg, uploadUserImgForUser } from \"../../../network/user\";\nimport store from \"@/store\";\nexport default {\n  name: \"Profile\",\n\n  setup() {\n    let route = useRoute();\n    let updateSuccess = ref(false);\n    let updateFailed = ref(false);\n    let form = reactive({\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      area: \"\",\n      age: \"\"\n    });\n    form.id = store.state.user.id;\n    let valid = true;\n    let nameRules = [v => !!v || 'Name is required', v => v && v.length <= 10 || 'Name must be less than 10 characters'];\n    let emailRules = [v => !!v || 'E-mail is required', v => /.+@.+\\..+/.test(v) || 'E-mail must be valid'];\n    let passwordRules = [v => !!v || 'E-mail is required'];\n    let phoneRules = [v => !!v || 'Name is required', v => v && v.length !== 11 || 'Name must be less than 10 characters'];\n\n    const validate = () => {\n      updateUserForUser(form).then(res => {\n        let status = res.data.status;\n\n        if (status >= 1) {\n          if (document.getElementById(\"input\").files[0] == null) {\n            updateSuccess.value = true;\n            setTimeout(() => {\n              updateSuccess.value = false;\n            }, 1000);\n            return;\n          }\n\n          let formData = new window.FormData();\n          formData.append(\"fileid\", form.id);\n          formData.append(\"file\", document.getElementById(\"input\").files[0]);\n          uploadUserImgForUser(formData).then(res => {\n            let imgStatus = res.data.status;\n\n            if (imgStatus === 1) {\n              updateSuccess.value = true;\n              setTimeout(() => {\n                updateSuccess.value = false;\n              }, 1000);\n            } else {\n              updateFailed.value = true;\n              setTimeout(() => {\n                updateFailed.value = false;\n              }, 1000);\n            }\n          });\n        } else {\n          updateFailed.value = true;\n          setTimeout(() => {\n            updateFailed.value = false;\n          }, 1000);\n        }\n      });\n    };\n\n    const init = () => {\n      getUserByIdForUser(store.state.user.id).then(res => {\n        form.name = res.data.name;\n        form.email = res.data.email;\n        form.password = res.data.password;\n        form.phone = res.data.phone;\n        form.area = res.data.area;\n        form.age = res.data.age;\n      });\n    };\n\n    onMounted(() => {\n      init();\n    });\n    return {\n      valid,\n      nameRules,\n      emailRules,\n      passwordRules,\n      phoneRules,\n      ...toRefs(form),\n      validate,\n      updateSuccess,\n      updateFailed //submitFiles,\n\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useRoute","onMounted","reactive","ref","toRefs","getUserById","getUserByIdForUser","updateUser","updateUserForUser","uploadUserImg","uploadUserImgForUser","store","name","setup","route","updateSuccess","updateFailed","form","id","email","password","phone","area","age","state","user","valid","nameRules","v","length","emailRules","test","passwordRules","phoneRules","validate","then","res","status","data","document","getElementById","files","value","setTimeout","formData","window","FormData","append","imgStatus","init"],"sourceRoot":"","sources":["C:\\Users\\tpmp1\\Desktop\\vue-project\\minishop\\src\\views\\front\\Profile.vue"],"sourcesContent":["<template>\r\n  <v-card style=\"height: 200px;\" color=\"#BF6211\">\r\n    <v-card-title class=\"text-h4 font-weight-black text-white mt-6 ml-4\">你的个人资料</v-card-title>\r\n    <v-card-subtitle class=\"text-h6 font-weight-black text-white mt-4 ml-4\">\r\n      在这里可更新你的个人资料\r\n    </v-card-subtitle>\r\n    <v-card-text>\r\n      <v-btn\r\n          color=\"#402c1a\"\r\n          class=\"font-weight-black text-white mt-2 ml-4\"\r\n          plain\r\n          @click=\"validate\"\r\n      >\r\n        <v-icon>mdi-account-plus</v-icon>\r\n        更新资料\r\n      </v-btn>\r\n    </v-card-text>\r\n  </v-card>\r\n\r\n  <v-card class=\"mt-6\">\r\n    <v-text-field\r\n        v-model=\"name\"\r\n        :counter=\"10\"\r\n        :rules=\"nameRules\"\r\n        label=\"Name\"\r\n        required\r\n    ></v-text-field>\r\n    <v-text-field\r\n        v-model=\"email\"\r\n        :rules=\"emailRules\"\r\n        label=\"E-mail\"\r\n        required\r\n    ></v-text-field>\r\n    <v-text-field\r\n        v-model=\"password\"\r\n        :rules=\"passwordRules\"\r\n        label=\"Password\"\r\n        required\r\n    ></v-text-field>\r\n    <v-text-field\r\n        v-model=\"phone\"\r\n        :rules=\"phoneRules\"\r\n        label=\"Phone\"\r\n        required\r\n    ></v-text-field>\r\n    <v-text-field\r\n        v-model=\"area\"\r\n        label=\"Area\"\r\n        required\r\n    ></v-text-field>\r\n    <v-text-field\r\n        v-model=\"age\"\r\n        label=\"Age\"\r\n        required\r\n    ></v-text-field>\r\n    <v-file-input\r\n        label=\"File input\"\r\n        filled\r\n        prepend-icon=\"mdi-camera\"\r\n        show-size\r\n        chips\r\n        id=\"input\"\r\n    ></v-file-input>\r\n    <v-avatar\r\n        size=\"50px\"\r\n    >\r\n      <v-img\r\n          alt=\"Avatar\"\r\n          :src=\"'http://localhost:8081/queryUserImg/'+ id\"\r\n          id=\"avatar\"\r\n      ></v-img>\r\n    </v-avatar>\r\n\r\n\r\n  </v-card>\r\n  <v-snackbar v-model=\"updateSuccess\">更新成功</v-snackbar>\r\n  <v-snackbar v-model=\"updateFailed\">更新失败</v-snackbar>\r\n</template>\r\n\r\n<script>\r\nimport {useRoute} from \"vue-router\";\r\nimport {onMounted, reactive, ref, toRefs} from \"vue\";\r\nimport {\r\n  getUserById,\r\n  getUserByIdForUser,\r\n  updateUser,\r\n  updateUserForUser,\r\n  uploadUserImg,\r\n  uploadUserImgForUser\r\n} from \"../../../network/user\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"Profile\",\r\n  setup() {\r\n    let route = useRoute();\r\n    let updateSuccess = ref(false);\r\n    let updateFailed = ref(false);\r\n\r\n    let form = reactive({\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n      area: \"\",\r\n      age: \"\",\r\n    })\r\n\r\n    form.id = store.state.user.id;\r\n\r\n    let valid = true\r\n    let nameRules = [\r\n      v => !!v || 'Name is required',\r\n      v => (v && v.length <= 10) || 'Name must be less than 10 characters',\r\n    ]\r\n    let emailRules = [\r\n      v => !!v || 'E-mail is required',\r\n      v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\r\n    ]\r\n    let passwordRules = [\r\n      v => !!v || 'E-mail is required',\r\n    ]\r\n    let phoneRules = [\r\n      v => !!v || 'Name is required',\r\n      v => (v && v.length !== 11) || 'Name must be less than 10 characters',\r\n    ]\r\n\r\n    const validate = () => {\r\n\r\n      updateUserForUser(form).then(res=>{\r\n        let status = res.data.status\r\n        if (status >= 1) {\r\n          if (document.getElementById(\"input\").files[0] == null) {\r\n            updateSuccess.value = true\r\n            setTimeout(()=>{\r\n              updateSuccess.value = false\r\n            },1000)\r\n            return\r\n          }\r\n          let formData = new window.FormData();\r\n          formData.append(\"fileid\", form.id)\r\n          formData.append(\"file\", document.getElementById(\"input\").files[0])\r\n          uploadUserImgForUser(formData).then(res=>{\r\n            let imgStatus = res.data.status;\r\n            if (imgStatus === 1) {\r\n              updateSuccess.value = true\r\n              setTimeout(()=>{\r\n                updateSuccess.value = false\r\n              },1000)\r\n            } else {\r\n              updateFailed.value = true\r\n              setTimeout(()=>{\r\n                updateFailed.value = false\r\n              },1000)\r\n            }\r\n          })\r\n        } else {\r\n          updateFailed.value = true\r\n          setTimeout(()=>{\r\n            updateFailed.value = false\r\n          },1000)\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const init = () => {\r\n      \r\n      getUserByIdForUser(store.state.user.id).then(res=>{\r\n        form.name = res.data.name\r\n        form.email = res.data.email\r\n        form.password = res.data.password\r\n        form.phone = res.data.phone\r\n        form.area = res.data.area\r\n        form.age = res.data.age\r\n      })\r\n\r\n\r\n\r\n    }\r\n\r\n    onMounted(()=>{\r\n      init()\r\n    })\r\n\r\n    return {\r\n      valid,\r\n      nameRules,\r\n      emailRules,\r\n      passwordRules,\r\n      phoneRules,\r\n      ...toRefs(form),\r\n      validate,\r\n      updateSuccess,\r\n      updateFailed,\r\n      //submitFiles,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}