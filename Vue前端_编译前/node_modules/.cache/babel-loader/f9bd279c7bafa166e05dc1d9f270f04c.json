{"ast":null,"code":"import { onMounted, ref, watch, toRefs, reactive } from \"vue\";\nimport { getCategoryNoPage } from \"../../../../network/category\";\nexport default {\n  name: \"salerInsertGood\",\n\n  setup() {\n    let insertSuccess = ref(false);\n    let insertFailed = ref(false);\n    let items = ref([]);\n    let form = reactive({\n      name: \"\",\n      category: \"\",\n      intro: \"\"\n    });\n    let valid = true;\n    let nameRules = [v => !!v || 'Name is required', v => v && v.length <= 10 || 'Name must be less than 10 characters'];\n\n    const init = () => {\n      getCategoryNoPage().then(res => {\n        for (let i in res.data) {\n          items.value.push(i.item);\n        }\n\n        console.log(items);\n      });\n    };\n\n    onMounted(() => {\n      init();\n    });\n\n    const validate = () => {};\n\n    return {\n      insertSuccess,\n      insertFailed,\n      ...toRefs(form),\n      valid,\n      nameRules,\n      validate,\n      items\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAmDA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAsD,KAAtD;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,eAAe;AACbC,MAAI,EAAE,iBADO;;AAEbC,OAAK,GAAG;AACN,QAAIC,aAAY,GAAIP,GAAG,CAAC,KAAD,CAAvB;AACA,QAAIQ,YAAW,GAAIR,GAAG,CAAC,KAAD,CAAtB;AACA,QAAIS,KAAI,GAAIT,GAAG,CAAC,EAAD,CAAf;AACA,QAAIU,IAAG,GAAIP,QAAQ,CAAC;AAClBE,UAAI,EAAE,EADY;AAElBM,cAAQ,EAAE,EAFQ;AAGlBC,WAAK,EAAE;AAHW,KAAD,CAAnB;AAKA,QAAIC,KAAI,GAAI,IAAZ;AACA,QAAIC,SAAQ,GAAI,CACdC,KAAK,CAAC,CAACA,CAAF,IAAO,kBADE,EAEdA,KAAMA,KAAKA,CAAC,CAACC,MAAF,IAAY,EAAlB,IAAyB,sCAFhB,CAAhB;;AAKA,UAAMC,IAAG,GAAI,MAAM;AACjBb,uBAAiB,GAAGc,IAApB,CAAyBC,GAAG,IAAE;AAC5B,aAAK,IAAIC,CAAT,IAAcD,GAAG,CAACE,IAAlB,EAAwB;AACtBZ,eAAK,CAACa,KAAN,CAAYC,IAAZ,CAAiBH,CAAC,CAACI,IAAnB;AACF;;AACAC,eAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,OALD;AAMF,KAPA;;AASAV,aAAS,CAAC,MAAI;AACZkB,UAAI;AACL,KAFQ,CAAT;;AAIA,UAAMU,QAAO,GAAI,MAAM,CAEvB,CAFA;;AAGA,WAAO;AACLpB,mBADK;AAELC,kBAFK;AAGL,SAAGN,MAAM,CAACQ,IAAD,CAHJ;AAILG,WAJK;AAKLC,eALK;AAMLa,cANK;AAOLlB;AAPK,KAAP;AASF;;AA1Ca,CAAf","names":["onMounted","ref","watch","toRefs","reactive","getCategoryNoPage","name","setup","insertSuccess","insertFailed","items","form","category","intro","valid","nameRules","v","length","init","then","res","i","data","value","push","item","console","log","validate"],"sourceRoot":"","sources":["C:\\Users\\tpmp1\\Desktop\\vue-project\\minishop\\src\\views\\back\\saler\\salerInsertGood.vue"],"sourcesContent":["<template>\r\n  <v-card style=\"height: 200px;\" color=\"#4480A6\">\r\n    <v-card-title class=\"text-h4 font-weight-black text-white mt-6 ml-4\">商品增加</v-card-title>\r\n    <v-card-subtitle class=\"text-h6 font-weight-black text-white mt-4 ml-4\">\r\n      在此可以增加商品信息<br>\r\n      注意：想要增加商品图片，在增加商品后在编辑介面进行\r\n    </v-card-subtitle>\r\n    <v-card-text>\r\n      <v-btn\r\n          color=\"#263F73\"\r\n          class=\"font-weight-black text-white mt-2 ml-4\"\r\n          plain\r\n          @click=\"validate\"\r\n      >\r\n        <v-icon>mdi-account-plus</v-icon>\r\n        增加商品\r\n      </v-btn>\r\n    </v-card-text>\r\n  </v-card>\r\n  <v-card class=\"mt-6\">\r\n    <v-form\r\n        v-model=\"valid\"\r\n        lazy-validation\r\n        class=\"ma-6\"\r\n    >\r\n      <v-text-field\r\n          v-model=\"name\"\r\n          :counter=\"10\"\r\n          :rules=\"nameRules\"\r\n          label=\"Name\"\r\n          required\r\n      ></v-text-field>\r\n      <v-text-field\r\n          v-model=\"intro\"\r\n          label=\"Intro\"\r\n          required\r\n      ></v-text-field>\r\n      <v-autocomplete\r\n          v-model=\"category\"\r\n          :items=\"items\"\r\n          dense\r\n          filled\r\n          label=\"Filled\"\r\n      ></v-autocomplete>\r\n    </v-form>\r\n  </v-card>\r\n  <v-snackbar v-model=\"insertSuccess\">增加成功</v-snackbar>\r\n  <v-snackbar v-model=\"insertFailed\">增加失败</v-snackbar>\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref, watch, toRefs, reactive} from \"vue\";\r\nimport { getCategoryNoPage } from \"../../../../network/category\"\r\n\r\nexport default {\r\n  name: \"salerInsertGood\",\r\n  setup() {\r\n    let insertSuccess = ref(false);\r\n    let insertFailed = ref(false);\r\n    let items = ref([])\r\n    let form = reactive({\r\n      name: \"\",\r\n      category: \"\",\r\n      intro: \"\",\r\n    })\r\n    let valid = true\r\n    let nameRules = [\r\n      v => !!v || 'Name is required',\r\n      v => (v && v.length <= 10) || 'Name must be less than 10 characters',\r\n    ]\r\n\r\n    const init = () => {\r\n      getCategoryNoPage().then(res=>{\r\n        for (let i in res.data) {\r\n          items.value.push(i.item)\r\n        }\r\n        console.log(items)\r\n      })\r\n    }\r\n\r\n    onMounted(()=>{\r\n      init();\r\n    })\r\n\r\n    const validate = () => {\r\n\r\n    }\r\n    return {\r\n      insertSuccess,\r\n      insertFailed,\r\n      ...toRefs(form),\r\n      valid,\r\n      nameRules,\r\n      validate,\r\n      items\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}