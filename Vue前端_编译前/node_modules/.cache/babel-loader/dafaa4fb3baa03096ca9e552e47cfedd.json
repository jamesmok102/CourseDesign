{"ast":null,"code":"import { useRoute, useRouter } from \"vue-router\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { getGoodSell } from \"../../../../network/good\";\nexport default {\n  name: \"adminCheckGoodSell\",\n\n  setup() {\n    let router = useRouter();\n    let route = useRoute();\n    let page = ref(1);\n    let desserts = ref([]);\n    let pageLength = ref(1);\n    let pageSize = ref(1);\n    let pageTotal = ref(1);\n    onMounted(() => {\n      init();\n    });\n\n    const init = () => {\n      getGoodSell(page.value).then(res => {\n        desserts.value = res.data.data;\n        pageLength.value = res.data.PageLength;\n        pageSize.value = res.data.PageSize;\n        pageTotal.value = res.data.PageTotal;\n      });\n    };\n\n    watch(page, async (newPage, oldPage) => {\n      init();\n    });\n    return {\n      desserts,\n      page,\n      pageLength,\n      pageSize\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAiDA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,YAAlC;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,KAAxB,QAAoC,KAApC;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AAEA,eAAe;AACbC,MAAI,EAAE,oBADO;;AAEbC,OAAK,GAAG;AACN,QAAIC,MAAK,GAAIP,SAAS,EAAtB;AACA,QAAIQ,KAAI,GAAIT,QAAQ,EAApB;AACA,QAAIU,IAAG,GAAIP,GAAG,CAAC,CAAD,CAAd;AACA,QAAIQ,QAAO,GAAIR,GAAG,CAAC,EAAD,CAAlB;AACA,QAAIS,UAAS,GAAIT,GAAG,CAAC,CAAD,CAApB;AACA,QAAIU,QAAO,GAAIV,GAAG,CAAC,CAAD,CAAlB;AACA,QAAIW,SAAQ,GAAIX,GAAG,CAAC,CAAD,CAAnB;AAEAD,aAAS,CAAC,MAAI;AACZa,UAAI;AACL,KAFQ,CAAT;;AAIA,UAAMA,IAAG,GAAI,MAAM;AACjBV,iBAAW,CAACK,IAAI,CAACM,KAAN,CAAX,CAAwBC,IAAxB,CAA6BC,GAAG,IAAE;AAChCP,gBAAQ,CAACK,KAAT,GAAiBE,GAAG,CAACC,IAAJ,CAASA,IAA1B;AACAP,kBAAU,CAACI,KAAX,GAAmBE,GAAG,CAACC,IAAJ,CAASC,UAA5B;AACAP,gBAAQ,CAACG,KAAT,GAAiBE,GAAG,CAACC,IAAJ,CAASE,QAA1B;AACAP,iBAAS,CAACE,KAAV,GAAkBE,GAAG,CAACC,IAAJ,CAASG,SAA3B;AACD,OALD;AAMF,KAPA;;AASAlB,SAAK,CAACM,IAAD,EAAO,OAAMa,OAAN,EAAeC,OAAf,KAA2B;AACrCT,UAAI;AACL,KAFI,CAAL;AAIA,WAAO;AACLJ,cADK;AAELD,UAFK;AAGLE,gBAHK;AAILC;AAJK,KAAP;AAMF;;AAlCa,CAAf","names":["useRoute","useRouter","onMounted","ref","watch","getGoodSell","name","setup","router","route","page","desserts","pageLength","pageSize","pageTotal","init","value","then","res","data","PageLength","PageSize","PageTotal","newPage","oldPage"],"sourceRoot":"","sources":["C:\\Users\\tpmp1\\Desktop\\vue-project\\minishop\\src\\views\\back\\admin\\adminCheckGoodSell.vue"],"sourcesContent":["<template>\r\n  <v-card style=\"height: 200px;\" color=\"#1F8A70\">\r\n    <v-card-title class=\"text-h4 font-weight-black text-white mt-6 ml-4\">商品出售情况</v-card-title>\r\n    <v-card-subtitle class=\"text-h6 font-weight-black text-white mt-4 ml-4\">\r\n      用于商品销售趋势预测与评估\r\n    </v-card-subtitle>\r\n    <v-card-text>\r\n\r\n    </v-card-text>\r\n  </v-card>\r\n\r\n  <v-card class=\"mt-6\">\r\n    <v-table>\r\n      <template v-slot:default>\r\n        <thead style=\"background-color: #1F8A70\">\r\n        <tr>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            商品\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            出售数\r\n          </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr\r\n            v-for=\"item in desserts\"\r\n            :key=\"item.id\"\r\n        >\r\n          <td class=\"font-weight-medium\">{{ item.name }}</td>\r\n          <td class=\"font-weight-medium\">{{item.count}}</td>\r\n        </tr>\r\n        </tbody>\r\n      </template>\r\n    </v-table>\r\n  </v-card>\r\n  <div class=\"float-right mt-2\">\r\n    <v-pagination\r\n        v-model=\"page\"\r\n        :length=\"pageLength\"\r\n        total-visible=\"10\"\r\n        rounded=\"circle\"\r\n\r\n    ></v-pagination>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport {onMounted, ref, watch} from \"vue\";\r\nimport {getGoodSell} from \"../../../../network/good\";\r\n\r\nexport default {\r\n  name: \"adminCheckGoodSell\",\r\n  setup() {\r\n    let router = useRouter();\r\n    let route = useRoute();\r\n    let page = ref(1);\r\n    let desserts = ref([]);\r\n    let pageLength = ref(1);\r\n    let pageSize = ref(1);\r\n    let pageTotal = ref(1);\r\n\r\n    onMounted(()=>{\r\n      init()\r\n    })\r\n\r\n    const init = () => {\r\n      getGoodSell(page.value).then(res=>{\r\n        desserts.value = res.data.data;\r\n        pageLength.value = res.data.PageLength;\r\n        pageSize.value = res.data.PageSize;\r\n        pageTotal.value = res.data.PageTotal;\r\n      })\r\n    }\r\n\r\n    watch(page, async(newPage, oldPage) => {\r\n      init()\r\n    })\r\n\r\n    return {\r\n      desserts,\r\n      page,\r\n      pageLength,\r\n      pageSize,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}