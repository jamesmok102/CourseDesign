{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VListItem.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VListItemAvatar } from \"./VListItemAvatar.mjs\";\nimport { VListItemHeader } from \"./VListItemHeader.mjs\";\nimport { VListItemSubtitle } from \"./VListItemSubtitle.mjs\";\nimport { VListItemTitle } from \"./VListItemTitle.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useList } from \"./list.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed, onMounted, watch } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nimport { useNestedItem } from \"../../composables/nested/nested.mjs\"; // Types\n\nexport const VListItem = genericComponent()({\n  name: 'VListItem',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const link = useLink(props, attrs);\n    const id = computed(() => {\n      var _props$value;\n\n      return (_props$value = props.value) != null ? _props$value : link.href.value;\n    });\n    const {\n      select,\n      isSelected,\n      root,\n      parent\n    } = useNestedItem(id, false);\n    const list = useList();\n    const isActive = computed(() => {\n      var _link$isExactActive;\n\n      return props.active || ((_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value) || isSelected.value;\n    });\n    const variantProps = computed(() => {\n      var _props$activeColor;\n\n      const activeColor = (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color;\n      return {\n        color: isActive.value ? activeColor : props.color,\n        textColor: props.textColor,\n        variant: props.variant\n      };\n    });\n    onMounted(() => {\n      var _link$isExactActive2;\n\n      if ((_link$isExactActive2 = link.isExactActive) != null && _link$isExactActive2.value && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    });\n    watch(() => {\n      var _link$isExactActive3;\n\n      return (_link$isExactActive3 = link.isExactActive) == null ? void 0 : _link$isExactActive3.value;\n    }, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value\n    }));\n    useRender(() => {\n      var _slots$default;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasTitle = slots.title || props.title;\n      const hasSubtitle = slots.subtitle || props.subtitle;\n      const hasHeader = !!(hasTitle || hasSubtitle);\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const isClickable = !props.disabled && (link.isClickable.value || props.link || props.value != null);\n      list == null ? void 0 : list.updateHasPrepend(hasPrepend);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-list-item', {\n          'v-list-item--active': isActive.value,\n          'v-list-item--disabled': props.disabled,\n          'v-list-item--link': isClickable,\n          'v-list-item--prepend': !hasPrepend && (list == null ? void 0 : list.hasPrepend.value),\n          [`${props.activeClass}`]: isActive.value && props.activeClass\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value],\n        \"href\": link.href.value,\n        \"tabindex\": isClickable ? 0 : undefined,\n        \"onClick\": isClickable && (e => {\n          var _link$navigate;\n\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          select(!isSelected.value, e);\n        })\n      }, {\n        default: () => [genOverlays(isClickable || isActive.value, 'v-list-item'), hasPrepend && (slots.prepend ? slots.prepend(slotProps.value) : _createVNode(VListItemAvatar, {\n          \"left\": true\n        }, {\n          default: () => [_createVNode(VAvatar, {\n            \"density\": props.density,\n            \"icon\": props.prependIcon,\n            \"image\": props.prependAvatar\n          }, null)]\n        })), hasHeader && _createVNode(VListItemHeader, null, {\n          default: () => [hasTitle && _createVNode(VListItemTitle, null, {\n            default: () => [slots.title ? slots.title({\n              title: props.title\n            }) : props.title]\n          }), hasSubtitle && _createVNode(VListItemSubtitle, null, {\n            default: () => [slots.subtitle ? slots.subtitle({\n              subtitle: props.subtitle\n            }) : props.subtitle]\n          })]\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, slotProps.value), hasAppend && (slots.append ? slots.append(slotProps.value) : _createVNode(VListItemAvatar, {\n          \"right\": true\n        }, {\n          default: () => [_createVNode(VAvatar, {\n            \"density\": props.density,\n            \"icon\": props.appendIcon,\n            \"image\": props.appendAvatar\n          }, null)]\n        }))]\n      }), [[_resolveDirective(\"ripple\"), isClickable]]);\n    });\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VListItemAvatar","VListItemHeader","VListItemSubtitle","VListItemTitle","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","useList","Ripple","computed","onMounted","watch","genericComponent","useRender","useNestedItem","VListItem","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","link","prependAvatar","prependIcon","subtitle","title","value","variant","setup","attrs","slots","_ref","id","href","select","isSelected","root","parent","list","isActive","isExactActive","_link$isExactActive","variantProps","color","textColor","open","_link$isExactActive3","val","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","slotProps","Tag","isLink","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","updateHasPrepend","undefined","e","navigate","default","density","_slots$default"],"sources":["../../../src/components/VList/VListItem.tsx"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VListItemAvatar } from './VListItemAvatar'\nimport { VListItemHeader } from './VListItemHeader'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useList } from './list'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, onMounted, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\nimport { useNestedItem } from '@/composables/nested/nested'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { select, isSelected, root, parent } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value || isSelected.value\n    })\n    const variantProps = computed(() => {\n      const activeColor = props.activeColor ?? props.color\n      return {\n        color: isActive.value ? activeColor : props.color,\n        textColor: props.textColor,\n        variant: props.variant,\n      }\n    })\n\n    onMounted(() => {\n      if (link.isExactActive?.value && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    watch(() => link.isExactActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n    }))\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link || props.value != null)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && ((e: MouseEvent) => {\n            link.navigate?.(e)\n            select(!isSelected.value, e)\n          })}\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            slots.prepend\n              ? slots.prepend(slotProps.value)\n              : (\n                <VListItemAvatar left>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader>\n              { hasTitle && (\n                <VListItemTitle>\n                  { slots.title\n                    ? slots.title({ title: props.title })\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle({ subtitle: props.subtitle })\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            slots.append\n              ? slots.append(slotProps.value)\n              : (\n                <VListItemAvatar right>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n        </Tag>\n      )\n    })\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"]},"metadata":{},"sourceType":"module"}