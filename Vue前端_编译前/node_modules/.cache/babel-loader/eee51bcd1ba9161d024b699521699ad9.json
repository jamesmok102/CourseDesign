{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { createForm, makeFormProps } from \"../../composables/form.mjs\"; // Utilities\n\nimport { ref } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nexport const VForm = defineComponent({\n  name: 'VForm',\n  props: { ...makeFormProps()\n  },\n  emits: {\n    'update:modelValue': val => true,\n    submit: e => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const form = createForm(props);\n    const formRef = ref();\n\n    function onReset(e) {\n      e.preventDefault();\n      form.reset();\n    }\n\n    function onSubmit(e) {\n      e.preventDefault();\n      form.validate().then(_ref2 => {\n        let {\n          valid\n        } = _ref2;\n\n        if (valid) {\n          emit('submit', e);\n        }\n      });\n    }\n\n    useRender(() => {\n      var _slots$default;\n\n      return _createVNode(\"form\", {\n        \"ref\": formRef,\n        \"class\": \"v-form\",\n        \"novalidate\": true,\n        \"onReset\": onReset,\n        \"onSubmit\": onSubmit\n      }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, form)]);\n    });\n    return form;\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;SACSA,YAAYC,qB,8BAErB;;AACA,SAASC,GAAT,QAAoB,KAApB;SACSC,iBAAiBC,iB;AAE1B,OAAO,MAAMC,KAAK,GAAGF,eAAe,CAAC;AACnCG,MAAI,EAAE,OAD6B;AAGnCC,OAAK,EAAE,EACL,GAAGN,aAAa;AADX,GAH4B;AAOnCO,OAAK,EAAE;AACL,yBAAsBC,GAAD,IAAyB,IADzC;AAELC,UAAM,EAAGC,CAAD,IAAc;AAFjB,GAP4B;;AAYnCC,OAAK,CAAEL,KAAF,QAA0B;AAAA,QAAjB;AAAEM,WAAF;AAASC;AAAT,QAAiBC;AAC7B,UAAMC,IAAI,GAAGhB,UAAU,CAACO,KAAD,CAAvB;AACA,UAAMU,OAAO,GAAGf,GAAG,EAAnB;;AAEA,aAASgB,OAAT,CAAkBP,CAAlB,EAA4B;AAC1BA,OAAC,CAACQ,cAAFR;AACAK,UAAI,CAACI,KAALJ;AACD;;AAED,aAASK,QAAT,CAAmBV,CAAnB,EAA6B;AAC3BA,OAAC,CAACQ,cAAFR;AACAK,UAAI,CAACM,QAALN,GAAgBO,IAAhBP,CAAqBQ,SAAe;AAAA,YAAd;AAAEC;AAAF,YAAcD;;AAClC,YAAIC,KAAJ,EAAW;AACTX,cAAI,CAAC,QAAD,EAAWH,CAAX,CAAJG;AACD;AAHH;AAKD;;AAEDV,aAAS,CAAC;AAAA;;AAAA;AAAA,eAEAa,OAFA;AAAA,iBAGA,QAHA;AAAA;AAAA,mBAKIC,OALJ;AAAA,oBAMKG;AANL,4BAQJR,KAAK,CAACa,OARF,qBAQJC,2BAAgBX,IAAhB,CARI;AAAD,MAATZ;AAYA,WAAOY,IAAP;AACD;;AA3CkC,CAAD,CAA7B","names":["createForm","makeFormProps","ref","defineComponent","useRender","VForm","name","props","emits","val","submit","e","setup","slots","emit","_ref","form","formRef","onReset","preventDefault","reset","onSubmit","validate","then","_ref2","valid","default","_slots$default"],"sources":["../../../src/components/VForm/VForm.tsx"],"sourcesContent":["// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\n\n// Utilities\nimport { ref } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VForm = defineComponent({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: Event) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (e: Event) {\n      e.preventDefault()\n      form.validate().then(({ valid }) => {\n        if (valid) {\n          emit('submit', e)\n        }\n      })\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return form\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n"]},"metadata":{},"sourceType":"module"}