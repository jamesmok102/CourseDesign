{"ast":null,"code":"import { onMounted, ref, watch, toRefs, reactive } from \"vue\";\nimport { insertSaler, getSalerById, updateSaler } from \"../../../../network/saler\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"adminEditSaler\",\n\n  setup() {\n    let route = useRoute();\n    let updateSuccess = ref(false);\n    let updateFailed = ref(false);\n    let form = reactive({\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\"\n    });\n    form.id = route.query.id;\n    let valid = true;\n    let nameRules = [v => !!v || 'Name is required', v => v && v.length <= 10 || 'Name must be less than 10 characters'];\n    let emailRules = [v => !!v || 'E-mail is required', v => /.+@.+\\..+/.test(v) || 'E-mail must be valid'];\n    let passwordRules = [v => !!v || 'E-mail is required'];\n    let phoneRules = [v => !!v || 'Name is required', v => v && v.length !== 11 || 'Name must be less than 10 characters'];\n\n    const validate = () => {\n      // insertSaler(form).then(res=>{\n      //   let status = res.data.status;\n      //   console.log(res);\n      //   console.log(res.data.status);\n      //   if (status === 1) {\n      //     insertSuccess.value = true;\n      //     setTimeout(()=>{\n      //       insertSuccess.value = false;\n      //     }, 1000)\n      //   } else {\n      //     insertFailed.value = true;\n      //     setTimeout(()=>{\n      //       insertFailed.value = false;\n      //     }, 1000)\n      //   }\n      //   form.name = \"\"\n      //   form.email = \"\"\n      //   form.password = \"\"\n      //   form.phone = \"\"\n      // })\n      updateSaler(form).then(res => {\n        let status = res.data.status;\n\n        if (status >= 1) {\n          updateSuccess.value = true;\n          setTimeout(() => {\n            updateSuccess.value = false;\n          }, 1000);\n        } else {\n          updateFailed.value = true;\n          setTimeout(() => {\n            updateFailed.value = false;\n          }, 1000);\n        }\n\n        init();\n      });\n    };\n\n    const init = () => {\n      getSalerById(form.id).then(res => {\n        form.name = res.data.name;\n        form.email = res.data.email;\n        form.password = res.data.password;\n        form.phone = res.data.phone;\n      });\n    };\n\n    onMounted(() => {\n      init();\n    });\n    return {\n      valid,\n      nameRules,\n      emailRules,\n      passwordRules,\n      phoneRules,\n      ...toRefs(form),\n      validate,\n      updateSuccess,\n      updateFailed\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","ref","watch","toRefs","reactive","insertSaler","getSalerById","updateSaler","useRoute","name","setup","route","updateSuccess","updateFailed","form","id","email","password","phone","query","valid","nameRules","v","length","emailRules","test","passwordRules","phoneRules","validate","then","res","status","data","value","setTimeout","init"],"sourceRoot":"","sources":["C:\\Users\\tpmp1\\Desktop\\vue-project\\minishop\\src\\views\\back\\admin\\adminEditSaler.vue"],"sourcesContent":["<template>\r\n  <v-card style=\"height: 200px;\" color=\"#1F8A70\">\r\n    <v-card-title class=\"text-h4 font-weight-black text-white mt-6 ml-4\">销售人员更新</v-card-title>\r\n    <v-card-subtitle class=\"text-h6 font-weight-black text-white mt-4 ml-4\">\r\n      在此可以编辑销售人员的各种信息\r\n    </v-card-subtitle>\r\n    <v-card-text>\r\n      <v-btn\r\n          color=\"#004358\"\r\n          class=\"font-weight-black text-white mt-2 ml-4\"\r\n          plain\r\n          @click=\"validate\"\r\n      >\r\n        <v-icon>mdi-account-plus</v-icon>\r\n        更新成员\r\n      </v-btn>\r\n    </v-card-text>\r\n  </v-card>\r\n  <v-card class=\"mt-6\">\r\n    <v-form\r\n        v-model=\"valid\"\r\n        lazy-validation\r\n        class=\"ma-6\"\r\n    >\r\n      <v-text-field\r\n          v-model=\"name\"\r\n          :counter=\"10\"\r\n          :rules=\"nameRules\"\r\n          label=\"Name\"\r\n          required\r\n      ></v-text-field>\r\n      <v-text-field\r\n          v-model=\"email\"\r\n          :rules=\"emailRules\"\r\n          label=\"E-mail\"\r\n          required\r\n      ></v-text-field>\r\n      <v-text-field\r\n          v-model=\"password\"\r\n          :rules=\"passwordRules\"\r\n          label=\"Password\"\r\n          required\r\n      ></v-text-field>\r\n      <v-text-field\r\n          v-model=\"phone\"\r\n          :rules=\"phoneRules\"\r\n          label=\"Phone\"\r\n          required\r\n      ></v-text-field>\r\n      <v-file-input\r\n          label=\"File input\"\r\n          filled\r\n          prepend-icon=\"mdi-camera\"\r\n      ></v-file-input>\r\n    </v-form>\r\n  </v-card>\r\n  <v-snackbar v-model=\"updateSuccess\">更新成功</v-snackbar>\r\n  <v-snackbar v-model=\"updateFailed\">更新失败</v-snackbar>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {onMounted, ref, watch, toRefs, reactive} from \"vue\";\r\nimport {insertSaler, getSalerById, updateSaler} from \"../../../../network/saler\";\r\nimport {useRoute} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"adminEditSaler\",\r\n  setup() {\r\n\r\n    let route = useRoute();\r\n    let updateSuccess = ref(false);\r\n    let updateFailed = ref(false);\r\n\r\n    let form = reactive({\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n    })\r\n\r\n    form.id = route.query.id;\r\n\r\n    let valid = true\r\n    let nameRules = [\r\n      v => !!v || 'Name is required',\r\n      v => (v && v.length <= 10) || 'Name must be less than 10 characters',\r\n    ]\r\n    let emailRules = [\r\n      v => !!v || 'E-mail is required',\r\n      v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\r\n    ]\r\n    let passwordRules = [\r\n      v => !!v || 'E-mail is required',\r\n    ]\r\n    let phoneRules = [\r\n      v => !!v || 'Name is required',\r\n      v => (v && v.length !== 11) || 'Name must be less than 10 characters',\r\n    ]\r\n\r\n    const validate = () => {\r\n      // insertSaler(form).then(res=>{\r\n      //   let status = res.data.status;\r\n      //   console.log(res);\r\n      //   console.log(res.data.status);\r\n      //   if (status === 1) {\r\n      //     insertSuccess.value = true;\r\n      //     setTimeout(()=>{\r\n      //       insertSuccess.value = false;\r\n      //     }, 1000)\r\n      //   } else {\r\n      //     insertFailed.value = true;\r\n      //     setTimeout(()=>{\r\n      //       insertFailed.value = false;\r\n      //     }, 1000)\r\n      //   }\r\n      //   form.name = \"\"\r\n      //   form.email = \"\"\r\n      //   form.password = \"\"\r\n      //   form.phone = \"\"\r\n      // })\r\n      updateSaler(form).then(res=>{\r\n        let status = res.data.status\r\n        if (status >= 1) {\r\n          updateSuccess.value = true\r\n          setTimeout(()=>{\r\n            updateSuccess.value = false\r\n          },1000)\r\n        } else {\r\n          updateFailed.value = true\r\n          setTimeout(()=>{\r\n            updateFailed.value = false\r\n          },1000)\r\n        }\r\n        init()\r\n      })\r\n    }\r\n\r\n    const init = () => {\r\n      getSalerById(form.id).then(res=>{\r\n        form.name = res.data.name\r\n        form.email = res.data.email\r\n        form.password = res.data.password\r\n        form.phone = res.data.phone\r\n      })\r\n    }\r\n\r\n    onMounted(()=>{\r\n      init()\r\n    })\r\n\r\n    return {\r\n      valid,\r\n      nameRules,\r\n      emailRules,\r\n      passwordRules,\r\n      phoneRules,\r\n      ...toRefs(form),\r\n      validate,\r\n      updateSuccess,\r\n      updateFailed,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}