{"ast":null,"code":"import { useRouter } from \"vue-router\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { betchDeleteGoodById, deleteGoodById, getGoodAll, getGoodBySaler } from \"../../../../network/good\";\nimport { betchDeleteCategoryById, deleteCategoryById, getCategoryNoPage } from \"../../../../network/category\";\nimport store from \"@/store\";\nexport default {\n  name: \"salerManageGood\",\n\n  setup() {\n    let router = useRouter();\n    let page = ref(1);\n    let desserts = ref([]);\n    let pageLength = ref(1);\n    let pageSize = ref(1);\n    let pageTotal = ref(1);\n    let selected = ref([]);\n    let fullSelected = ref(false);\n    let deleteSuccess = ref(false);\n    let deleteFailed = ref(false);\n    onMounted(() => {\n      init();\n    });\n\n    const init = () => {\n      // getGoodAll(page.value).then(res=>{\n      //   desserts.value = res.data.data;\n      //   pageLength.value = res.data.PageLength;\n      //   pageSize.value = res.data.PageSize;\n      //   pageTotal.value = res.data.PageTotal;\n      // })\n      getGoodBySaler(store.state.saler.id, page.value).then(res => {\n        desserts.value = res.data.data;\n        pageLength.value = res.data.PageLength;\n        pageSize.value = res.data.PageSize;\n        pageTotal.value = res.data.PageTotal;\n      });\n    };\n\n    const changeFullSelect = () => {\n      if (fullSelected.value == true) {\n        selected.value = desserts.value.map(item => item.id);\n      } else {\n        selected.value = [];\n      }\n    };\n\n    watch(page, async (newPage, oldPage) => {\n      init();\n    });\n\n    const deleteGood = id => {\n      deleteGoodById(id).then(res => {\n        let status = res.data.status;\n\n        if (status > 0) {\n          deleteSuccess.value = true;\n          setTimeout(() => {\n            deleteSuccess.value = false;\n          }, 1000);\n        } else {\n          deleteFailed.value = true;\n          setTimeout(() => {\n            deleteFailed.value = false;\n          }, 1000);\n        }\n\n        init();\n      });\n    };\n\n    const batchDeleteGood = () => {\n      betchDeleteGoodById(selected.value).then(res => {\n        let status = res.data.status;\n\n        if (status > 0) {\n          deleteSuccess.value = true;\n          setTimeout(() => {\n            deleteSuccess.value = false;\n          }, 1000);\n        } else {\n          deleteFailed.value = true;\n          setTimeout(() => {\n            deleteFailed.value = false;\n          }, 1000);\n        }\n\n        init();\n      });\n    };\n\n    const editGood = id => {\n      router.push({\n        path: \"salereditgood\",\n        query: {\n          id: id\n        }\n      });\n    };\n\n    return {\n      desserts,\n      page,\n      pageLength,\n      selected,\n      changeFullSelect,\n      fullSelected,\n      pageSize,\n      deleteSuccess,\n      deleteFailed,\n      deleteGood,\n      batchDeleteGood,\n      editGood\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useRouter","onMounted","ref","watch","betchDeleteGoodById","deleteGoodById","getGoodAll","getGoodBySaler","betchDeleteCategoryById","deleteCategoryById","getCategoryNoPage","store","name","setup","router","page","desserts","pageLength","pageSize","pageTotal","selected","fullSelected","deleteSuccess","deleteFailed","init","state","saler","id","value","then","res","data","PageLength","PageSize","PageTotal","changeFullSelect","map","item","newPage","oldPage","deleteGood","status","setTimeout","batchDeleteGood","editGood","push","path","query"],"sourceRoot":"","sources":["C:\\Users\\tpmp1\\Desktop\\vue-project\\minishop\\src\\views\\back\\saler\\salerManageGood.vue"],"sourcesContent":["<template>\r\n  <v-card style=\"height: 200px;\" color=\"#4480A6\">\r\n    <v-card-title class=\"text-h4 font-weight-black text-white mt-6 ml-4\">商品查询</v-card-title>\r\n    <v-card-subtitle class=\"text-h6 font-weight-black text-white mt-4 ml-4\">\r\n      在此可以查询商品，想看商品的图片请到编辑介面，当然，只能看到当前销售人员负责的商品\r\n    </v-card-subtitle>\r\n    <v-card-text>\r\n      <v-btn\r\n          color=\"#263F73\"\r\n          class=\"font-weight-black text-white mt-2 ml-4\"\r\n          plain\r\n          @click=\"batchDeleteGood\"\r\n      >\r\n        <v-icon>mdi-file-remove</v-icon>\r\n        批量删除\r\n      </v-btn>\r\n    </v-card-text>\r\n  </v-card>\r\n  <v-card class=\"mt-6\">\r\n    <v-table>\r\n      <template v-slot:default>\r\n        <thead style=\"background-color: #4480A6\">\r\n        <tr>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            <v-checkbox hide-details @change=\"changeFullSelect\" v-model=\"fullSelected\"></v-checkbox>\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            名称\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            类别\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            价格\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            库存\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            销售人员\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            操作\r\n          </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr\r\n            v-for=\"n in desserts\"\r\n            :key=\"n.id\"\r\n        >\r\n          <td class=\"font-weight-medium\"><v-checkbox hide-details :value=\"n.id\" v-model=\"selected\"></v-checkbox></td>\r\n          <td class=\"font-weight-medium\">{{ n.name }}</td>\r\n          <td class=\"font-weight-medium\">{{ n.item }}</td>\r\n          <td class=\"font-weight-medium\">{{ n.price }}</td>\r\n          <td class=\"font-weight-medium\">{{ n.count }}</td>\r\n          <td class=\"font-weight-medium\">{{ n.salername }}</td>\r\n          <td>\r\n            <v-btn\r\n                color=\"#73BCD9\"\r\n                class=\"font-weight-black text-white\"\r\n                plain\r\n                @click=\"editGood(n.id)\"\r\n            >\r\n              <v-icon>mdi-file-document-edit</v-icon>\r\n              编辑\r\n            </v-btn>\r\n            &nbsp\r\n            <v-btn\r\n                color=\"#73BCD9\"\r\n                plain\r\n                class=\"font-weight-black text-white\"\r\n                @click=\"deleteGood(n.id)\"\r\n            >\r\n              <v-icon>mdi-file-remove</v-icon>\r\n              删除\r\n            </v-btn>\r\n\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </template>\r\n    </v-table>\r\n  </v-card>\r\n  <div class=\"float-right mt-2\">\r\n    <v-pagination\r\n        v-model=\"page\"\r\n        :length=\"pageLength\"\r\n        total-visible=\"10\"\r\n        rounded=\"circle\"\r\n\r\n    ></v-pagination>\r\n  </div>\r\n  <v-snackbar v-model=\"deleteSuccess\">删除成功</v-snackbar>\r\n  <v-snackbar v-model=\"deleteFailed\">删除失败</v-snackbar>\r\n</template>\r\n\r\n<script>\r\nimport {useRouter} from \"vue-router\";\r\nimport {onMounted, ref, watch} from \"vue\";\r\nimport {betchDeleteGoodById, deleteGoodById, getGoodAll, getGoodBySaler} from \"../../../../network/good\";\r\nimport {betchDeleteCategoryById, deleteCategoryById, getCategoryNoPage} from \"../../../../network/category\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"salerManageGood\",\r\n  setup() {\r\n    let router = useRouter();\r\n    let page = ref(1);\r\n    let desserts = ref([]);\r\n    let pageLength = ref(1);\r\n    let pageSize = ref(1);\r\n    let pageTotal = ref(1);\r\n    let selected = ref([]);\r\n    let fullSelected = ref(false);\r\n    let deleteSuccess = ref(false);\r\n    let deleteFailed = ref(false);\r\n\r\n    onMounted(()=>{\r\n      init()\r\n    })\r\n\r\n    const init = () => {\r\n      // getGoodAll(page.value).then(res=>{\r\n      //   desserts.value = res.data.data;\r\n      //   pageLength.value = res.data.PageLength;\r\n      //   pageSize.value = res.data.PageSize;\r\n      //   pageTotal.value = res.data.PageTotal;\r\n      // })\r\n      getGoodBySaler(store.state.saler.id, page.value).then(res=>{\r\n        desserts.value = res.data.data;\r\n        pageLength.value = res.data.PageLength;\r\n        pageSize.value = res.data.PageSize;\r\n        pageTotal.value = res.data.PageTotal;\r\n      })\r\n    }\r\n\r\n    const changeFullSelect = () => {\r\n      if (fullSelected.value == true) {\r\n        selected.value = desserts.value.map(item=>item.id)\r\n      } else {\r\n        selected.value = [];\r\n      }\r\n    }\r\n\r\n    watch(page, async(newPage, oldPage) => {\r\n      init()\r\n    })\r\n\r\n    const deleteGood = (id) => {\r\n      deleteGoodById(id).then(res=>{\r\n        let status = res.data.status;\r\n        if (status > 0) {\r\n          deleteSuccess.value = true;\r\n          setTimeout(()=>{\r\n            deleteSuccess.value = false;\r\n          }, 1000)\r\n        } else {\r\n          deleteFailed.value = true;\r\n          setTimeout(()=>{\r\n            deleteFailed.value = false;\r\n          }, 1000)\r\n        }\r\n        init()\r\n      })\r\n    }\r\n\r\n    const batchDeleteGood = () => {\r\n      betchDeleteGoodById(selected.value).then(res=>{\r\n        let status = res.data.status;\r\n        if (status > 0) {\r\n          deleteSuccess.value = true;\r\n          setTimeout(()=>{\r\n            deleteSuccess.value = false;\r\n          }, 1000)\r\n        } else {\r\n          deleteFailed.value = true;\r\n          setTimeout(()=>{\r\n            deleteFailed.value = false;\r\n          }, 1000)\r\n        }\r\n        init()\r\n      })\r\n    }\r\n\r\n    const editGood = (id) => {\r\n      router.push({path: \"salereditgood\", query: {id: id}})\r\n    }\r\n\r\n    return {\r\n      desserts,\r\n      page,\r\n      pageLength,\r\n      selected,\r\n      changeFullSelect,\r\n      fullSelected,\r\n      pageSize,\r\n      deleteSuccess,\r\n      deleteFailed,\r\n      deleteGood,\r\n      batchDeleteGood,\r\n      editGood,\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}