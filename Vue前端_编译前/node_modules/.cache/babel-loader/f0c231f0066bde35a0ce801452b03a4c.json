{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VToolbar.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\";\nimport { VToolbarTitle } from \"./VToolbarTitle.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useForwardRef } from \"../../composables/forwardRef.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'];\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 56\n  },\n  image: String,\n  title: String,\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'header'\n  }),\n  ...makeThemeProps()\n}, 'v-toolbar');\nexport const VToolbar = genericComponent()({\n  name: 'VToolbar',\n  props: makeVToolbarProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const contentHeight = computed(() => Number(props.height) + (props.density === 'prominent' ? Number(props.height) : 0) - (props.density === 'comfortable' ? 8 : 0) - (props.density === 'compact' ? 16 : 0));\n    provideDefaults({\n      VBtn: {\n        flat: true,\n        variant: 'text'\n      },\n      VTextField: {\n        hideDetails: true\n      }\n    }, {\n      scoped: true\n    });\n    useRender(() => {\n      var _slots$image, _slots$prepend, _slots$default, _slots$append, _slots$extension;\n\n      const hasTitle = !!(props.title || slots.title);\n      const hasImage = !!(slots.image || props.image);\n      const isExtended = !!(props.extended || slots.extension);\n      return _createVNode(props.tag, {\n        \"class\": ['v-toolbar', {\n          'v-toolbar--absolute': props.absolute,\n          'v-toolbar--collapse': props.collapse,\n          'v-toolbar--flat': props.flat,\n          'v-toolbar--floating': props.floating,\n          [`v-toolbar--density-${props.density}`]: true\n        }, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value, themeClasses.value],\n        \"style\": [backgroundColorStyles.value]\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"class\": \"v-toolbar__image\"\n        }, [_createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          },\n          \"scoped\": true\n        }, {\n          default: () => [slots.image ? (_slots$image = slots.image) == null ? void 0 : _slots$image.call(slots) : _createVNode(VImg, null, null)]\n        })]), _createVNode(\"div\", {\n          \"class\": \"v-toolbar__content\",\n          \"style\": {\n            height: convertToUnit(contentHeight.value)\n          }\n        }, [slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-toolbar__prepend\"\n        }, [(_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots)]), hasTitle && _createVNode(VToolbarTitle, {\n          \"text\": props.title\n        }, {\n          text: slots.title\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-toolbar__append\"\n        }, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots)])]), isExtended && _createVNode(\"div\", {\n          \"class\": \"v-toolbar__extension\",\n          \"style\": {\n            height: convertToUnit(props.extensionHeight)\n          }\n        }, [(_slots$extension = slots.extension) == null ? void 0 : _slots$extension.call(slots)])]\n      });\n    });\n    return useForwardRef({\n      contentHeight\n    });\n  }\n\n});\nexport function filterToolbarProps(props) {\n  var _VToolbar$props;\n\n  return pick(props, Object.keys((_VToolbar$props = VToolbar == null ? void 0 : VToolbar.props) != null ? _VToolbar$props : {}));\n}","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","VImg","VToolbarTitle","makeBorderProps","useBorder","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useBackgroundColor","useForwardRef","computed","toRef","convertToUnit","genericComponent","pick","propsFactory","useRender","allowedDensities","makeVToolbarProps","absolute","Boolean","collapse","color","String","density","type","default","validator","v","includes","extended","extensionHeight","Number","flat","floating","height","image","title","tag","VToolbar","name","props","setup","slots","_ref","borderClasses","elevationClasses","roundedClasses","themeClasses","backgroundColorClasses","backgroundColorStyles","contentHeight","VBtn","variant","VTextField","hideDetails","scoped","hasTitle","hasImage","isExtended","extension","value","cover","src","_slots$image","prepend","_slots$prepend","text","_slots$default","append","_slots$append","_slots$extension","filterToolbarProps","Object","keys"],"sources":["../../../src/components/VToolbar/VToolbar.tsx"],"sourcesContent":["// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from './VToolbarTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useForwardRef } from '@/composables/forwardRef'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { ExtractPropTypes, PropType } from 'vue'\n\nexport type Density = typeof allowedDensities[number]\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 56,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'v-toolbar')\n\nexport const VToolbar = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: []\n    image: [{ image: string }]\n    prepend: []\n    append: []\n    title: []\n    extension: []\n  }>\n}>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const contentHeight = computed(() => (\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ))\n\n    provideDefaults({\n      VBtn: {\n        flat: true,\n        variant: 'text',\n      },\n      VTextField: {\n        hideDetails: true,\n      },\n    }, { scoped: true })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n      const isExtended = !!(props.extended || slots.extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n          ]}\n        >\n          { hasImage && (\n            <div class=\"v-toolbar__image\">\n              <VDefaultsProvider\n                defaults={{\n                  VImg: {\n                    cover: true,\n                    src: props.image,\n                  },\n                }}\n                scoped\n              >\n                { slots.image ? slots.image?.() : (<VImg />) }\n              </VDefaultsProvider>\n            </div>\n          ) }\n\n          <div\n            class=\"v-toolbar__content\"\n            style={{ height: convertToUnit(contentHeight.value) }}\n          >\n            { slots.prepend && (\n              <div class=\"v-toolbar__prepend\">\n                { slots.prepend?.() }\n              </div>\n            ) }\n\n            { hasTitle && (\n              <VToolbarTitle text={ props.title }>\n                {{ text: slots.title }}\n              </VToolbarTitle>\n            ) }\n\n            { slots.default?.() }\n\n            { slots.append && (\n              <div class=\"v-toolbar__append\">\n                { slots.append?.() }\n              </div>\n            ) }\n          </div>\n\n          { isExtended && (\n            <div\n              class=\"v-toolbar__extension\"\n              style={{ height: convertToUnit(props.extensionHeight) }}\n            >\n              { slots.extension?.() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return useForwardRef({ contentHeight })\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n\nexport function filterToolbarProps (props: ExtractPropTypes<ReturnType<typeof makeVToolbarProps>>) {\n  return pick(props, Object.keys(VToolbar?.props ?? {}) as any)\n}\n"]},"metadata":{},"sourceType":"module"}