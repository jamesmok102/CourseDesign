{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport store from \"@/store\";\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  component: () => import('../views/AboutView.vue')\n}, {\n  path: '/adminlogin',\n  name: 'adminLogin',\n  component: () => import('../views/back/admin/adminLogin.vue')\n}, {\n  path: '/adminmain',\n  name: 'adminMain',\n  component: () => import('../views/back/admin/adminMain.vue'),\n  children: [{\n    path: '/adminmanagesalers',\n    name: 'adminManageSalers',\n    component: () => import('../views/back/admin/adminManageSalers.vue')\n  }, {\n    path: '/admininsertsalers',\n    name: 'adminInsertSalers',\n    component: () => import('../views/back/admin/adminInsertSaler.vue')\n  }, {\n    path: '/admineditsalers',\n    name: 'adminEditSalers',\n    component: () => import('../views/back/admin/adminEditSaler.vue')\n  }],\n  meta: {\n    isAuthRequired: true,\n    adminPage: true\n  }\n}, {\n  path: '/salerlogin',\n  name: 'salerLogin',\n  component: () => import('../views/back/saler/salerLogin.vue')\n}, {\n  path: '/salermain',\n  name: 'salerMain',\n  component: () => import('../views/back/saler/salerMain.vue'),\n  children: [{\n    path: '/salermanagecategory',\n    name: 'salerManageCategory',\n    component: () => import('../views/back/saler/salerManageCategory.vue')\n  }, {\n    path: '/salerinsertcategory',\n    name: 'salerInsertCategory',\n    component: () => import('../views/back/saler/salerInsertCategory.vue')\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.isAuthRequired && to.meta.adminPage && store.state.admin.isLogin == false) {\n    return next('/adminlogin');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"sources":["C:/Users/tpmp1/Desktop/vue-project/minishop/src/router/index.js"],"names":["createRouter","createWebHistory","HomeView","store","routes","path","name","component","children","meta","isAuthRequired","adminPage","router","history","process","env","BASE_URL","beforeEach","to","from","next","state","admin","isLogin"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAEL;AAHb,CADa,EAMb;AACEG,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAE,MAAM,OAAO,wBAAP;AAHnB,CANa,EAWb;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,SAAS,EAAE,MAAM,OAAO,oCAAP;AAHnB,CAXa,EAgBb;AACEF,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,SAAS,EAAE,MAAM,OAAO,mCAAP,CAHnB;AAIEC,EAAAA,QAAQ,EAAE,CACR;AACEH,IAAAA,IAAI,EAAE,oBADR;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,SAAS,EAAE,MAAM,OAAO,2CAAP;AAHnB,GADQ,EAMR;AACEF,IAAAA,IAAI,EAAE,oBADR;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,SAAS,EAAE,MAAM,OAAO,0CAAP;AAHnB,GANQ,EAWR;AACEF,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,SAAS,EAAE,MAAM,OAAO,wCAAP;AAHnB,GAXQ,CAJZ;AAqBEE,EAAAA,IAAI,EAAE;AACJC,IAAAA,cAAc,EAAE,IADZ;AAEJC,IAAAA,SAAS,EAAE;AAFP;AArBR,CAhBa,EA0Cb;AACEN,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,SAAS,EAAE,MAAM,OAAO,oCAAP;AAHnB,CA1Ca,EA+Cb;AACEF,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,SAAS,EAAE,MAAM,OAAO,mCAAP,CAHnB;AAIEC,EAAAA,QAAQ,EAAE,CACR;AACEH,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,IAAI,EAAE,qBAFR;AAGEC,IAAAA,SAAS,EAAE,MAAM,OAAO,6CAAP;AAHnB,GADQ,EAMR;AACEF,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,IAAI,EAAE,qBAFR;AAGEC,IAAAA,SAAS,EAAE,MAAM,OAAO,6CAAP;AAHnB,GANQ;AAJZ,CA/Ca,CAAf;AAoEA,MAAMK,MAAM,GAAGZ,YAAY,CAAC;AAC1Ba,EAAAA,OAAO,EAAEZ,gBAAgB,CAACa,OAAO,CAACC,GAAR,CAAYC,QAAb,CADC;AAE1BZ,EAAAA;AAF0B,CAAD,CAA3B;AAKAQ,MAAM,CAACK,UAAP,CAAkB,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAgB;AAChC,MAAIF,EAAE,CAACT,IAAH,CAAQC,cAAR,IAA0BQ,EAAE,CAACT,IAAH,CAAQE,SAAlC,IAA+CR,KAAK,CAACkB,KAAN,CAAYC,KAAZ,CAAkBC,OAAlB,IAA6B,KAAhF,EAAuF;AACrF,WAAOH,IAAI,CAAC,aAAD,CAAX;AACD,GAFD,MAEO;AACLA,IAAAA,IAAI;AACL;AACF,CAND;AAQA,eAAeR,MAAf","sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport store from \"@/store\";\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: () => import('../views/AboutView.vue')\n  },\n  {\n    path: '/adminlogin',\n    name: 'adminLogin',\n    component: () => import('../views/back/admin/adminLogin.vue')\n  },\n  {\n    path: '/adminmain',\n    name: 'adminMain',\n    component: () => import('../views/back/admin/adminMain.vue'),\n    children: [\n      {\n        path: '/adminmanagesalers',\n        name: 'adminManageSalers',\n        component: () => import('../views/back/admin/adminManageSalers.vue')\n      },\n      {\n        path: '/admininsertsalers',\n        name: 'adminInsertSalers',\n        component: () => import('../views/back/admin/adminInsertSaler.vue')\n      },\n      {\n        path: '/admineditsalers',\n        name: 'adminEditSalers',\n        component: () => import('../views/back/admin/adminEditSaler.vue')\n      },\n    ],\n    meta: {\n      isAuthRequired: true,\n      adminPage: true,\n    }\n  },\n  {\n    path: '/salerlogin',\n    name: 'salerLogin',\n    component: () => import('../views/back/saler/salerLogin.vue'),\n  },\n  {\n    path: '/salermain',\n    name: 'salerMain',\n    component: () => import('../views/back/saler/salerMain.vue'),\n    children: [\n      {\n        path: '/salermanagecategory',\n        name: 'salerManageCategory',\n        component: () => import('../views/back/saler/salerManageCategory.vue'),\n      },\n      {\n        path: '/salerinsertcategory',\n        name: 'salerInsertCategory',\n        component: () => import('../views/back/saler/salerInsertCategory.vue'),\n      }\n    ],\n  }\n\n\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to,from,next)=>{\n  if (to.meta.isAuthRequired && to.meta.adminPage && store.state.admin.isLogin == false) {\n    return next('/adminlogin');\n  } else {\n    next();\n  }\n})\n\nexport default router\n"]},"metadata":{},"sourceType":"module"}