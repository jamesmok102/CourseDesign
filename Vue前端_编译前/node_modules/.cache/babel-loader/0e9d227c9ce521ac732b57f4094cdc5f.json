{"ast":null,"code":"import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSnackbar.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\n\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Utilities\n\nimport { onMounted, watch } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nexport const VSnackbar = defineComponent({\n  name: 'VSnackbar',\n  props: {\n    app: Boolean,\n    centered: Boolean,\n    contentClass: {\n      type: String,\n      default: ''\n    },\n    multiLine: Boolean,\n    timeout: {\n      type: [Number, String],\n      default: 5000\n    },\n    vertical: Boolean,\n    modelValue: Boolean,\n    ...makePositionProps(),\n    ...makeVariantProps(),\n    ...makeTransitionProps({\n      transition: 'v-snackbar-transition'\n    })\n  },\n  emits: {\n    'update:modelValue': v => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      positionClasses,\n      positionStyles\n    } = usePosition(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    watch(isActive, startTimeout);\n    watch(() => props.timeout, startTimeout);\n    onMounted(() => {\n      if (isActive.value) startTimeout();\n    });\n    let activeTimeout = -1;\n\n    function startTimeout() {\n      window.clearTimeout(activeTimeout);\n      const timeout = Number(props.timeout);\n      if (!isActive.value || timeout === -1) return;\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false;\n      }, timeout);\n    }\n\n    function onPointerenter() {\n      window.clearTimeout(activeTimeout);\n    }\n\n    useRender(() => {\n      var _slots$default, _slots$actions;\n\n      return _createVNode(\"div\", {\n        \"class\": ['v-snackbar', {\n          'v-snackbar--active': isActive.value,\n          'v-snackbar--bottom': props.bottom || !props.top,\n          'v-snackbar--centered': props.centered,\n          'v-snackbar--end': props.right,\n          'v-snackbar--multi-line': props.multiLine && !props.vertical,\n          'v-snackbar--start': props.left,\n          'v-snackbar--top': props.top,\n          'v-snackbar--vertical': props.vertical\n        }, positionClasses.value],\n        \"style\": [colorStyles.value, positionStyles.value]\n      }, [_createVNode(MaybeTransition, {\n        \"transition\": props.transition\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": ['v-snackbar__wrapper', colorClasses.value, variantClasses.value],\n          \"onPointerenter\": onPointerenter,\n          \"onPointerleave\": startTimeout\n        }, [genOverlays(false, 'v-snackbar'), slots.default && _createVNode(\"div\", {\n          \"class\": ['v-snackbar__content', props.contentClass],\n          \"role\": \"status\",\n          \"aria-live\": \"polite\"\n        }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)]), slots.actions && _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              variant: 'text',\n              ripple: false\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-snackbar__actions\"\n          }, [(_slots$actions = slots.actions) == null ? void 0 : _slots$actions.call(slots)])]\n        })]), [[_vShow, isActive.value]])]\n      })]);\n    });\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","makePositionProps","usePosition","useProxiedModel","makeTransitionProps","MaybeTransition","genOverlays","makeVariantProps","useVariant","onMounted","watch","defineComponent","useRender","VSnackbar","name","props","app","Boolean","centered","contentClass","type","String","default","multiLine","timeout","Number","vertical","modelValue","transition","emits","v","setup","slots","_ref","isActive","positionClasses","positionStyles","colorClasses","colorStyles","variantClasses","startTimeout","value","activeTimeout","window","clearTimeout","setTimeout","onPointerenter","bottom","top","right","left","_slots$default","actions","VBtn","variant","ripple","_slots$actions"],"sources":["../../../src/components/VSnackbar/VSnackbar.tsx"],"sourcesContent":["// Styles\nimport './VSnackbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { onMounted, watch } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VSnackbar = defineComponent({\n  name: 'VSnackbar',\n\n  props: {\n    app: Boolean,\n    centered: Boolean,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n    multiLine: Boolean,\n    timeout: {\n      type: [Number, String],\n      default: 5000,\n    },\n    vertical: Boolean,\n\n    modelValue: Boolean,\n\n    ...makePositionProps(),\n    ...makeVariantProps(),\n    ...makeTransitionProps({ transition: 'v-snackbar-transition' }),\n  },\n\n  emits: {\n    'update:modelValue': (v: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { positionClasses, positionStyles } = usePosition(props)\n\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n\n    watch(isActive, startTimeout)\n    watch(() => props.timeout, startTimeout)\n\n    onMounted(() => {\n      if (isActive.value) startTimeout()\n    })\n\n    let activeTimeout = -1\n    function startTimeout () {\n      window.clearTimeout(activeTimeout)\n      const timeout = Number(props.timeout)\n\n      if (!isActive.value || timeout === -1) return\n\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false\n      }, timeout)\n    }\n\n    function onPointerenter () {\n      window.clearTimeout(activeTimeout)\n    }\n\n    useRender(() => (\n      <div\n        class={[\n          'v-snackbar',\n          {\n            'v-snackbar--active': isActive.value,\n            'v-snackbar--bottom': props.bottom || !props.top,\n            'v-snackbar--centered': props.centered,\n            'v-snackbar--end': props.right,\n            'v-snackbar--multi-line': props.multiLine && !props.vertical,\n            'v-snackbar--start': props.left,\n            'v-snackbar--top': props.top,\n            'v-snackbar--vertical': props.vertical,\n          },\n          positionClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          positionStyles.value,\n        ]}\n      >\n        <MaybeTransition transition={ props.transition }>\n          <div\n            class={[\n              'v-snackbar__wrapper',\n              colorClasses.value,\n              variantClasses.value,\n            ]}\n            v-show={ isActive.value }\n            onPointerenter={ onPointerenter }\n            onPointerleave={ startTimeout }\n          >\n            { genOverlays(false, 'v-snackbar') }\n\n            { slots.default && (\n              <div\n                class={[\n                  'v-snackbar__content',\n                  props.contentClass,\n                ]}\n                role=\"status\"\n                aria-live=\"polite\"\n              >\n                { slots.default?.() }\n              </div>\n            ) }\n\n            { slots.actions && (\n              <VDefaultsProvider\n                defaults={{\n                  VBtn: {\n                    variant: 'text',\n                    ripple: false,\n                  },\n                }}\n              >\n                <div class=\"v-snackbar__actions\">\n                  { slots.actions?.() }\n                </div>\n              </VDefaultsProvider>\n            ) }\n          </div>\n        </MaybeTransition>\n      </div>\n    ))\n  },\n})\n\nexport type VSnackbar = InstanceType<typeof VSnackbar>\n"]},"metadata":{},"sourceType":"module"}