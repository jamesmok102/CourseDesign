{"ast":null,"code":"import axios from 'axios';\nimport router from \"@/router\";\nexport function request(config) {\n  const instance = axios.create({\n    baseURL: 'http://localhost:8081',\n    timeout: 5000\n  }); //请求拦截\n\n  instance.interceptors.request.use(config => {\n    const token = window.localStorage.getItem('JWT_Token');\n\n    if (token) {\n      config.headers.Authorization = 'Bearer ' + token;\n    }\n\n    return config;\n  }); //响应拦截\n\n  instance.interceptors.response.use(res => {\n    return res;\n  }, err => {\n    if (err.response.status == '401') {\n      router.push({\n        path: '/adminlogin'\n      });\n    }\n  });\n  return instance(config);\n}","map":{"version":3,"sources":["C:/Users/tpmp1/Desktop/vue-project/minishop/network/request.js"],"names":["axios","router","request","config","instance","create","baseURL","timeout","interceptors","use","token","window","localStorage","getItem","headers","Authorization","response","res","err","status","push","path"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,uBADiB;AAE1BC,IAAAA,OAAO,EAAE;AAFiB,GAAb,CAAjB,CAD4B,CAM5B;;AACAH,EAAAA,QAAQ,CAACI,YAAT,CAAsBN,OAAtB,CAA8BO,GAA9B,CAAkCN,MAAM,IAAE;AACtC,UAAMO,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAd;;AACA,QAAIH,KAAJ,EAAW;AACPP,MAAAA,MAAM,CAACW,OAAP,CAAeC,aAAf,GAA+B,YAAYL,KAA3C;AACH;;AACD,WAAOP,MAAP;AACH,GAND,EAP4B,CAe5B;;AACAC,EAAAA,QAAQ,CAACI,YAAT,CAAsBQ,QAAtB,CAA+BP,GAA/B,CAAmCQ,GAAG,IAAE;AACpC,WAAOA,GAAP;AACH,GAFD,EAEEC,GAAG,IAAE;AACH,QAAGA,GAAG,CAACF,QAAJ,CAAaG,MAAb,IAAuB,KAA1B,EAAiC;AAC7BlB,MAAAA,MAAM,CAACmB,IAAP,CAAY;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAZ;AACH;AACJ,GAND;AAQA,SAAOjB,QAAQ,CAACD,MAAD,CAAf;AACH","sourcesContent":["import axios from 'axios';\r\nimport router from \"@/router\";\r\n\r\nexport function request(config) {\r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8081',\r\n        timeout: 5000\r\n    })\r\n\r\n    //请求拦截\r\n    instance.interceptors.request.use(config=>{\r\n        const token = window.localStorage.getItem('JWT_Token');\r\n        if (token) {\r\n            config.headers.Authorization = 'Bearer ' + token;\r\n        }\r\n        return config;\r\n    })\r\n\r\n    //响应拦截\r\n    instance.interceptors.response.use(res=>{\r\n        return res;\r\n    },err=>{\r\n        if(err.response.status == '401') {\r\n            router.push({path:'/adminlogin'});\r\n        }\r\n    })\r\n\r\n    return instance(config);\r\n}"]},"metadata":{},"sourceType":"module"}