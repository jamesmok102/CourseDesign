{"ast":null,"code":"import { useRoute, useRouter } from \"vue-router\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { betchDeleteCartByIdForUser, changeSelected, deleteCartByIdForUser, getCartByUserIdAllForUser, userDealwithCart } from \"../../../network/cart\";\nexport default {\n  name: \"Cart\",\n\n  setup() {\n    let router = useRouter();\n    let route = useRoute();\n    let page = ref(1);\n    let desserts = ref([]);\n    let pageLength = ref(1);\n    let pageSize = ref(1);\n    let pageTotal = ref(1);\n    let selected = ref([]);\n    let fullSelected = ref(false);\n    let deleteSuccess = ref(false);\n    let deleteFailed = ref(false);\n    onMounted(() => {\n      init();\n    });\n\n    const init = () => {\n      getCartByUserIdAllForUser(window.localStorage.getItem(\"UserId\"), page.value).then(res => {\n        desserts.value = res.data.data;\n        pageLength.value = res.data.PageLength;\n        pageSize.value = res.data.PageSize;\n        pageTotal.value = res.data.PageTotal;\n        res.data.data.forEach(value => {\n          if (value.selected == 1) {\n            selected.value.push(value.id);\n          }\n        });\n      });\n    };\n\n    const changeFullSelect = () => {\n      if (fullSelected.value == true) {\n        selected.value = desserts.value.map(item => item.id);\n      } else {\n        selected.value = [];\n      }\n    };\n\n    const subCount = (id, count, good_id, user_id) => {\n      let form = {\n        id,\n        count: count - 1,\n        good_id,\n        user_id\n      };\n      userDealwithCart(form).then(res => {\n        console.log(res.data);\n        init();\n      });\n    };\n\n    const addCount = (id, count, good_id, user_id) => {\n      let form = {\n        id,\n        count: count + 1,\n        good_id,\n        user_id\n      };\n      console.log(form);\n      userDealwithCart(form).then(res => {\n        console.log(res.data);\n        init();\n      });\n    };\n\n    watch(page, async (newPage, oldPage) => {\n      init();\n    });\n    watch(selected, async (newSelected, oldSelected) => {\n      //console.log(\"oldSelected:\"+oldSelected);\n      //console.log(\"newSelected:\"+newSelected);\n      changeSelected(selected.value, window.localStorage.getItem(\"UserId\")).then(res => {\n        init();\n      });\n    });\n\n    const deleteCart = id => {\n      deleteCartByIdForUser(id).then(res => {\n        let status = res.data.status;\n\n        if (status > 0) {\n          deleteSuccess.value = true;\n          setTimeout(() => {\n            deleteSuccess.value = false;\n          }, 1000);\n        } else {\n          deleteFailed.value = true;\n          setTimeout(() => {\n            deleteFailed.value = false;\n          }, 1000);\n        }\n\n        init();\n      });\n    };\n\n    const batchDeleteCart = () => {\n      betchDeleteCartByIdForUser(selected.value).then(res => {\n        let status = res.data.status;\n\n        if (status > 0) {\n          deleteSuccess.value = true;\n          setTimeout(() => {\n            deleteSuccess.value = false;\n          }, 1000);\n        } else {\n          deleteFailed.value = true;\n          setTimeout(() => {\n            deleteFailed.value = false;\n          }, 1000);\n        }\n\n        init();\n      });\n    };\n\n    return {\n      desserts,\n      page,\n      pageLength,\n      selected,\n      changeFullSelect,\n      fullSelected,\n      pageSize,\n      deleteSuccess,\n      deleteFailed,\n      deleteCart,\n      batchDeleteCart,\n      subCount,\n      addCount\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useRoute","useRouter","onMounted","ref","watch","betchDeleteCartByIdForUser","changeSelected","deleteCartByIdForUser","getCartByUserIdAllForUser","userDealwithCart","name","setup","router","route","page","desserts","pageLength","pageSize","pageTotal","selected","fullSelected","deleteSuccess","deleteFailed","init","window","localStorage","getItem","value","then","res","data","PageLength","PageSize","PageTotal","forEach","push","id","changeFullSelect","map","item","subCount","count","good_id","user_id","form","console","log","addCount","newPage","oldPage","newSelected","oldSelected","deleteCart","status","setTimeout","batchDeleteCart"],"sourceRoot":"","sources":["C:\\Users\\tpmp1\\Desktop\\vue-project\\minishop\\src\\views\\front\\Cart.vue"],"sourcesContent":["<template>\r\n  <v-card style=\"height: 200px;\" color=\"#BF6211\">\r\n    <v-card-title class=\"text-h4 font-weight-black text-white mt-6 ml-4\">你的购物车</v-card-title>\r\n    <v-card-subtitle class=\"text-h6 font-weight-black text-white mt-4 ml-4\">\r\n      购物车的商品数量是实时更新的，请放心的按下去<br>\r\n      数量减到1时并不会自动删除，怕你不小心按错了\r\n    </v-card-subtitle>\r\n    <v-card-text>\r\n      <v-btn\r\n          color=\"#402c1a\"\r\n          class=\"font-weight-black text-white mt-2 ml-4\"\r\n          plain\r\n          @click=\"batchDeleteCart\"\r\n      >\r\n        <v-icon>mdi-account-plus</v-icon>\r\n        批量删除\r\n      </v-btn>\r\n    </v-card-text>\r\n  </v-card>\r\n  <v-card class=\"mt-6\">\r\n    <v-table>\r\n      <template v-slot:default>\r\n        <thead style=\"background-color: #733410\">\r\n        <tr>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            <v-checkbox hide-details @change=\"changeFullSelect\" v-model=\"fullSelected\"></v-checkbox>\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            商品\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            数量\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            用户\r\n          </th>\r\n          <th class=\"text-left text-subtitle-1 font-weight-black text-white\">\r\n            操作\r\n          </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr\r\n            v-for=\"n in desserts\"\r\n            :key=\"n.id\"\r\n        >\r\n          <td class=\"font-weight-medium\"><v-checkbox hide-details :value=\"n.id\" v-model=\"selected\"></v-checkbox></td>\r\n          <td class=\"font-weight-medium\">{{ n.good }}</td>\r\n          <td class=\"font-weight-medium\">\r\n            <v-btn color=\"#f28f16\" class=\"font-weight-black text-white\" density=\"compact\"\r\n                   @click=\"subCount(n.id, n.count, n.good_id, n.user_id)\">\r\n              -\r\n            </v-btn>\r\n            {{ n.count }}\r\n            <v-btn color=\"#f28f16\" class=\"font-weight-black text-white\" density=\"compact\"\r\n                   @click=\"addCount(n.id, n.count, n.good_id, n.user_id)\">\r\n              +\r\n            </v-btn>\r\n          </td>\r\n          <td class=\"font-weight-medium\">{{ n.user }}</td>\r\n          <td>\r\n            <v-btn\r\n                color=\"#f28f16\"\r\n                plain\r\n                class=\"font-weight-black text-white\"\r\n                @click=\"deleteCart(n.id)\"\r\n            >\r\n              <v-icon>mdi-file-remove</v-icon>\r\n              删除\r\n            </v-btn>\r\n\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </template>\r\n    </v-table>\r\n  </v-card>\r\n  <div class=\"float-right mt-2\">\r\n    <v-pagination\r\n        v-model=\"page\"\r\n        :length=\"pageLength\"\r\n        total-visible=\"10\"\r\n        rounded=\"circle\"\r\n\r\n    ></v-pagination>\r\n  </div>\r\n  <v-snackbar v-model=\"deleteSuccess\">删除成功</v-snackbar>\r\n  <v-snackbar v-model=\"deleteFailed\">删除失败</v-snackbar>\r\n</template>\r\n\r\n<script>\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport {onMounted, ref, watch} from \"vue\";\r\nimport {\r\n  betchDeleteCartByIdForUser, changeSelected,\r\n  deleteCartByIdForUser,\r\n  getCartByUserIdAllForUser,\r\n  userDealwithCart\r\n} from \"../../../network/cart\";\r\n\r\nexport default {\r\n  name: \"Cart\",\r\n  setup() {\r\n    let router = useRouter();\r\n    let route = useRoute();\r\n    let page = ref(1);\r\n    let desserts = ref([]);\r\n    let pageLength = ref(1);\r\n    let pageSize = ref(1);\r\n    let pageTotal = ref(1);\r\n    let selected = ref([]);\r\n    let fullSelected = ref(false);\r\n    let deleteSuccess = ref(false);\r\n    let deleteFailed = ref(false);\r\n\r\n    onMounted(()=>{\r\n      init()\r\n    })\r\n\r\n    const init = () => {\r\n      getCartByUserIdAllForUser(window.localStorage.getItem(\"UserId\"), page.value).then(res=>{\r\n        desserts.value = res.data.data;\r\n        pageLength.value = res.data.PageLength;\r\n        pageSize.value = res.data.PageSize;\r\n        pageTotal.value = res.data.PageTotal;\r\n        res.data.data.forEach((value)=>{\r\n          if (value.selected == 1) {\r\n            selected.value.push(value.id)\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    const changeFullSelect = () => {\r\n      if (fullSelected.value == true) {\r\n        selected.value = desserts.value.map(item=>item.id)\r\n      } else {\r\n        selected.value = [];\r\n      }\r\n    }\r\n\r\n    const subCount = (id, count, good_id, user_id) => {\r\n      let form = {\r\n        id,\r\n        count: count - 1,\r\n        good_id,\r\n        user_id,\r\n      }\r\n      userDealwithCart(form).then(res=>{\r\n        console.log(res.data);\r\n        init()\r\n      })\r\n\r\n    }\r\n\r\n    const addCount = (id, count, good_id, user_id) => {\r\n      let form = {\r\n        id,\r\n        count: count + 1,\r\n        good_id,\r\n        user_id,\r\n      }\r\n      console.log(form);\r\n      userDealwithCart(form).then(res=>{\r\n        console.log(res.data);\r\n        init()\r\n      })\r\n    }\r\n\r\n    watch(page, async(newPage, oldPage) => {\r\n      init()\r\n    })\r\n\r\n    watch(selected, async(newSelected, oldSelected) => {\r\n      //console.log(\"oldSelected:\"+oldSelected);\r\n      //console.log(\"newSelected:\"+newSelected);\r\n      changeSelected(selected.value, window.localStorage.getItem(\"UserId\")).then(res=>{\r\n        init()\r\n      })\r\n    })\r\n\r\n    const deleteCart = (id) => {\r\n      deleteCartByIdForUser(id).then(res=>{\r\n        let status = res.data.status;\r\n        if (status > 0) {\r\n          deleteSuccess.value = true;\r\n          setTimeout(()=>{\r\n            deleteSuccess.value = false;\r\n          }, 1000)\r\n        } else {\r\n          deleteFailed.value = true;\r\n          setTimeout(()=>{\r\n            deleteFailed.value = false;\r\n          }, 1000)\r\n        }\r\n        init()\r\n      })\r\n    }\r\n\r\n    const batchDeleteCart = () => {\r\n      betchDeleteCartByIdForUser(selected.value).then(res=>{\r\n        let status = res.data.status;\r\n        if (status > 0) {\r\n          deleteSuccess.value = true;\r\n          setTimeout(()=>{\r\n            deleteSuccess.value = false;\r\n          }, 1000)\r\n        } else {\r\n          deleteFailed.value = true;\r\n          setTimeout(()=>{\r\n            deleteFailed.value = false;\r\n          }, 1000)\r\n        }\r\n        init()\r\n      })\r\n    }\r\n\r\n    return {\r\n      desserts,\r\n      page,\r\n      pageLength,\r\n      selected,\r\n      changeFullSelect,\r\n      fullSelected,\r\n      pageSize,\r\n      deleteSuccess,\r\n      deleteFailed,\r\n      deleteCart,\r\n      batchDeleteCart,\r\n      subCount,\r\n      addCount,\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}